[tool:pytest]
# 项目名称 / Project Name
name = chinese-ai-video-system

# 测试目录 / Test directories
testpaths =
    backend/tests
    tests

# Python文件模式 / Python file patterns
python_files =
    test_*.py
    *_test.py

# Python类模式 / Python class patterns
python_classes =
    Test*
    *Test

# Python函数模式 / Python function patterns
python_functions =
    test_*
    *_test

# 忽略文件模式 / Ignore file patterns
norecursedirs =
    .git
    __pycache__
    node_modules
    build
    dist
    *.egg-info
    .venv
    venv
    env

# 最小覆盖率 / Minimum coverage
addopts =
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=backend/app
    --cov-report=term-missing
    --cov-report=html
    --cov-fail-under=80

# 覆盖率排除 / Coverage exclusions
[coverage:run]
source = backend/app
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    backend/app/main.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\(Protocol\):
    @(abc\.)?abstractmethod

# 环境变量 / Environment variables
env =
    PYTHONPATH=backend
    TESTING=true
    DEBUG=true

# 标记配置 / Marker configuration
markers =
    unit: 单元测试 / Unit tests
    integration: 集成测试 / Integration tests
    e2e: 端到端测试 / End-to-end tests
    slow: 慢速测试 / Slow tests
    ai: AI服务测试 / AI service tests
    api: API测试 / API tests
    database: 数据库测试 / Database tests
    redis: Redis测试 / Redis tests
    security: 安全测试 / Security tests
    performance: 性能测试 / Performance tests

# 异步测试 / Async testing
asyncio_mode = auto

# 超时设置 / Timeout settings
timeout = 300

# 并行测试 / Parallel testing
# numprocesses = auto

# 日志配置 / Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 测试发现 / Test discovery
# addopts = --collect-only  # 仅收集测试 / Collect tests only

# 内存泄漏检测 / Memory leak detection
# addopts = --memray

# 性能分析 / Performance profiling
# addopts = --profile-svg